For uchun Python
For tsikli ketma-ketlikni takrorlash uchun ishlatiladi (ya'ni ro'yxat, kortej, lug'at, to'plam yoki satr).

Bu boshqa dasturlash tillaridagi for kalit so'ziga o'xshamaydi va boshqa ob'ektga yo'naltirilgan dasturlash tillarida bo'lgani kabi iterator usuli kabi ishlaydi.

For tsikli yordamida biz ro'yxatdagi har bir element uchun bir martadan, kortejdan, to'plamdan va hokazolardan iborat bir qator bayonotlarni bajarishimiz mumkin.

Misol
Har bir mevani mevalar ro'yxatida chop eting:

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)


///////////////////////////////////

For tsikli oldindan belgilash uchun indekslovchi o'zgaruvchini talab qilmaydi.

String orqali aylanish
Hatto satrlar ham takrorlanadigan ob'ektlar bo'lib, ular belgilar ketma-ketligini o'z ichiga oladi:

Misol
"Banan" so'zidagi harflarni aylantiring:

for x in "banana":
  print(x)

//////////////////////////////////////////////////////

Tanaffus bayonoti
Break iborasi yordamida biz tsiklni barcha elementlardan o'tib ketmasdan to'xtatishimiz mumkin:

Misol
x"Banan" bo'lganda tsikldan chiqing :

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
  if x == "banana":
    break

//////////////////////////////////////////////////////////

Misol
"Banan" bo'lganda tsikldan chiqing x, lekin bu safar tanaffus chop etishdan oldin keladi:

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    break
  print(x)

///////////////////////////////////////////////////////////////


Davom etish bayonoti
Continue iborasi bilan biz tsiklning joriy iteratsiyasini to'xtatib, keyingisini davom ettirishimiz mumkin:

Misol
Bananni chop qilmang:

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    continue
  print(x)


////////////////////////////////////////////////////////////////////////////////////////////////////

range() funktsiyasi
Kodlar to'plamini ma'lum bir necha marta aylantirish uchun biz range() funktsiyasidan foydalanishimiz mumkin,
range () funktsiyasi sukut bo'yicha 0 dan boshlanadigan raqamlar ketma-ketligini qaytaradi va 1 ga (sukut bo'yicha) ortadi va belgilangan raqamda tugaydi.

Misol
range() funktsiyasidan foydalanish:

for x in range(6):
  print(x)

////////////////////////////////////////////////

E'tibor bering, interval (6) 0 dan 6 gacha bo'lgan qiymatlar emas, balki 0 dan 5 gacha bo'lgan qiymatlardir.


//////////////////////////////////////////


range () funksiyasi boshlangʻich qiymat sifatida sukut boʻyicha 0 ga oʻrnatiladi, biroq boshlangʻich qiymatni parametr qoʻshish orqali belgilash mumkin: range(2, 6) , bu 2 dan 6 gacha boʻlgan qiymatlarni bildiradi (lekin 6 dan tashqari):

Misol
Boshlash parametridan foydalanish:

for x in range(2, 6):
  print(x)


/////////////////////////////////////////////

range () funksiyasi sukut boʻyicha ketma-ketlikni 1 ga oshiradi, biroq uchinchi parametrni qoʻshish orqali oʻsish qiymatini belgilash mumkin: range(2, 30, 3 ) :

Misol
Tartibni 3 ga oshiring (standart 1):

for x in range(2, 30, 3):
  print(x)

/////////////////////////////////////////////

Boshqasi For Loop ichida
elseLoopdagi kalit so'z tsikl fortugagandan so'ng bajarilishi kerak bo'lgan kod blokini belgilaydi:

Misol
0 dan 5 gacha bo'lgan barcha raqamlarni chop eting va tsikl tugagandan so'ng xabarni chop eting:

for x in range(6):
  print(x)
else:
  print("Finally finished!")

//////////////////////////////////////////////////////

Eslatma:else Agar sikl bayonot bilan to'xtatilsa, blok BAJAR BO'LMAYDI break.

///////////////////////////////////////////////////////

Misol
3 bo'lganda siklni buzing x va else blok bilan nima sodir bo'lishini ko'ring:

for x in range(6):
  if x == 3: break
  print(x)
else:
  print("Finally finished!")

////////////////////////////////////////////////////////////////////////////////////////

O'rnatilgan halqalar
Yuvalangan halqa — halqa ichidagi halqa.

"Ichki halqa" "tashqi halqa" ning har bir iteratsiyasi uchun bir marta bajariladi:

Misol
Har bir meva uchun har bir sifatni chop eting:

adj = ["red", "big", "tasty"]
fruits = ["apple", "banana", "cherry"]

for x in adj:
  for y in fruits:
    print(x, y)

/////////////////////////////////////////////////////////////////////////////////////

O'tish bayonoti
forlooplar bo'sh bo'lishi mumkin emas, lekin agar sizda biron sababga ko'ra formazmunsiz tsikl mavjud bo'lsa, passxatolikka yo'l qo'ymaslik uchun bayonotni kiriting.

Misol
for x in [0, 1, 2]:
  pass